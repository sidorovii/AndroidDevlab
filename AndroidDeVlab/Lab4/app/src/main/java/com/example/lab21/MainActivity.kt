package com.example.lab21import android.content.Contextimport android.content.Intentimport android.os.Bundleimport android.util.Logimport android.widget.ArrayAdapterimport android.widget.ListViewimport android.widget.SimpleAdapterimport android.widget.Toastimport androidx.appcompat.app.AppCompatActivityimport androidx.core.view.isEmptyimport com.google.gson.Gsonimport com.google.gson.reflect.TypeTokenimport kotlinx.android.synthetic.main.activity_main.*    var dataList: java.util.ArrayList<java.util.HashMap<String, String>> =ArrayList<HashMap<String,String>>()class MainActivity : AppCompatActivity(){    private val PREF_NAME = "MainActivityPref"    private val EMAIL_KEY:String = "e"    private val PASSWORD_KEY:String = "p"    private val DATA_LIST_KEY:String = "dataList"    override fun onCreate(savedInstanceState: Bundle?)    {        Log.i("AppLogger","onCreate")        super.onCreate(savedInstanceState)        this.setContentView(R.layout.activity_main)        getPrefData()        val simpleAdapter = SimpleAdapter(this, dataList,android.R.layout.simple_list_item_2,            arrayOf("Email", "Password"), intArrayOf(android.R.id.text1,android.R.id.text2))        listView.adapter = simpleAdapter        var idListViewItemClicked: Int = -1        addButton.setOnClickListener()        {            val intent = Intent(this, LoginActivity2::class.java)            startActivity(intent)        }        listView.setOnItemClickListener{parent,view,position,id ->            idListViewItemClicked = position            listView.choiceMode = ListView.CHOICE_MODE_SINGLE        }        delButton.setOnClickListener()        {            if (listView.isEmpty() || idListViewItemClicked == -1)            {                Toast.makeText(this, "Please, select row", Toast.LENGTH_SHORT).show()            }            else            {                dataList.removeAt(idListViewItemClicked)                simpleAdapter.notifyDataSetChanged()                idListViewItemClicked = -1            }        }    }    override fun onStart()    {        Log.i("AppLogger", "onStart")        super.onStart()    }    override fun onResume()    {        Log.i("AppLogger","onResume")        super.onResume()        val strEmailIntentExtra: String? = intent.getStringExtra(EMAIL_KEY)        val strPasswordIntentExtra: String? = intent.getStringExtra(PASSWORD_KEY)        val map: HashMap<String, String> =HashMap()        map.put("Email", "$strEmailIntentExtra")        map.put("Password", "$strPasswordIntentExtra")        if (strPasswordIntentExtra != null && strEmailIntentExtra != null)        {            dataList.add(map)        }    }    private fun getPrefData()    {        val sharedPreferences = getSharedPreferences(PREF_NAME,Context.MODE_PRIVATE)        val gson:Gson = Gson()        val dataJson:String? = sharedPreferences.getString(DATA_LIST_KEY, "")        dataList = gson.fromJson(dataJson,            object : TypeToken<ArrayList<HashMap<String,String>>>() {}.type)        Toast.makeText(this,"Main data restored",Toast.LENGTH_SHORT).show()    }    override fun onPause()    {        Log.i("AppLogger", "onPause")        super.onPause()    }    private fun savePrefData()    {        val gson:Gson = Gson()        val dataJson = gson.toJson(dataList)        val sharedPreferences = getSharedPreferences(PREF_NAME,            Context.MODE_PRIVATE)        val editor = sharedPreferences.edit()        editor.putString(DATA_LIST_KEY, dataJson)        editor.apply()        Toast.makeText(this,"Main data saved",Toast.LENGTH_SHORT)            .show()    }    override fun onStop()    {        Log.i("AppLogger", "onStop")        super.onStop()        savePrefData()    }}